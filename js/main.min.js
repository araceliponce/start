import{jokes}from"../data/jokes.js";var click=document.querySelectorAll("[data-effect]"),menu=document.querySelector("#drawer-container"),pusher=document.querySelector(".drawer-pusher"),effect;const jokeBox=document.getElementById("jokeBox"),input=document.getElementById("query"),wallpaper=document.getElementById("wallpaper"),start=()=>{getJoke()},form=document.getElementById("form");function handleForm(e){e.preventDefault(),window.location.href=`https://www.google.com/search?q=${input.value.trim()}`,e.target.reset()}form.addEventListener("submit",handleForm);let photoURLs=[],selectedURLs=[];async function getWallpaper(){const username="ujitomo",url="https://api.unsplash.com/users/ujitomo/photos/?client_id=EAkpUx23U2dyolzE6VEEaQ_yaoZtz4O2E4Mw-O-1uq0&orientation=landscape";try{const resp=await fetch(url),data=await resp.json(),photoURLs=data.map(photo=>photo.urls.regular);setRandomBg(photoURLs)}catch(e){console.log(e)}}function setRandomBg(photoURLs){console.log("set randoom");const wallpaperDiv=document.getElementById("wallpaper");console.log(photoURLs);const availableURLs=photoURLs.filter(url=>!selectedURLs.includes(url));0===availableURLs.length&&(selectedURLs=[]);const randomIndex=Math.floor(Math.random()*availableURLs.length),randomURL=availableURLs[randomIndex];wallpaperDiv.style.backgroundImage=`url(${randomURL})`,selectedURLs.push(randomURL)}function addJoke(data){jokeBox.innerHTML=`\n    <blockquote>${data.pt1}</blockquote>\n    <small>${data.pt2}</small>\n  `}function getJoke(){const joke=Math.floor(Math.random()*jokes.length);addJoke(jokes[joke])}jokeBox.addEventListener("click",()=>{getJoke()});for(var i=0;i<click.length;i++)click[i].addEventListener("click",addClass);function addClass(e){effect=e.target.getAttribute("data-effect"),console.log(effect),menu.classList.toggle(effect),menu.classList.toggle("drawer-menu-open"),console.log(menu.classList)}function closeMenu(el){el.target.classList.contains("drawer-pusher")&&(menu.classList.toggle(effect),menu.classList.toggle("drawer-menu-open"))}pusher.addEventListener("click",closeMenu),document.addEventListener("keydown",e=>{const isInputElement="INPUT"===document.activeElement.tagName,isTextareaElement="TEXTAREA"===document.activeElement.tagName;isInputElement||isTextareaElement||" "!==e.key||(menu.classList.toggle("drawer-effect-3"),menu.classList.toggle("drawer-menu-open"))});const noteTextarea=document.getElementById("noteTextarea"),saveButton=document.getElementById("saveButton"),notasDiv=document.getElementById("notas");function saveNote(){const noteContent=noteTextarea.value.trim();if(""!==noteContent){const noteDiv=createNoteDiv(noteContent);notasDiv.appendChild(noteDiv),saveNoteToLocalStorage(noteContent),noteTextarea.value=""}}function createNoteDiv(content){const noteDiv=document.createElement("div");noteDiv.classList.add("nota");const lines=content.split("\n");lines.forEach(line=>{const words=line.split(" "),lineDiv=document.createElement("div");words.forEach(word=>{const wordElement=document.createElement("span");if(word.includes("//")||word.includes("www")){const link=document.createElement("a");link.href=word.startsWith("www")?`http://${word}`:word,link.textContent=word,wordElement.appendChild(link)}else wordElement.textContent=word;lineDiv.appendChild(wordElement),lineDiv.appendChild(document.createTextNode(" "))}),noteDiv.appendChild(lineDiv),noteDiv.appendChild(document.createElement("br"))});const absoluteBox=document.createElement("div"),deleteButton=document.createElement("button");return deleteButton.className="btn--close",absoluteBox.className="absolute",absoluteBox.append(deleteButton),noteDiv.appendChild(absoluteBox),deleteButton.addEventListener("click",()=>{deleteNoteFromLocalStorage(content),noteDiv.remove()}),noteDiv}function saveNoteToLocalStorage(content){let savedNotes=localStorage.getItem("notas");savedNotes=null===savedNotes?[]:JSON.parse(savedNotes),savedNotes.push(content),localStorage.setItem("notas",JSON.stringify(savedNotes))}function deleteNoteFromLocalStorage(content){let savedNotes=localStorage.getItem("notas");if(null!==savedNotes){savedNotes=JSON.parse(savedNotes);const updatedNotes=savedNotes.filter(note=>note!==content);localStorage.setItem("notas",JSON.stringify(updatedNotes))}}function loadNotes(){const savedNotes=localStorage.getItem("notas");if(null!==savedNotes){const parsedNotes=JSON.parse(savedNotes);parsedNotes.forEach(note=>{const noteDiv=createNoteDiv(note);notasDiv.appendChild(noteDiv)})}}window.addEventListener("DOMContentLoaded",loadNotes),saveButton.addEventListener("click",saveNote),noteTextarea.addEventListener("keydown",(function(event){"Enter"===event.key&&event.shiftKey&&saveNote()}));const deg=6,hour=document.querySelector(".hour"),min=document.querySelector(".min"),sec=document.querySelector(".sec"),setClock=()=>{let day=new Date,hh=30*day.getHours(),mm=6*day.getMinutes(),ss=6*day.getSeconds();hour.style.transform=`rotateZ(${hh+mm/12}deg)`,min.style.transform=`rotateZ(${mm}deg)`,sec.style.transform=`rotateZ(${ss}deg)`};setClock(),setInterval(setClock,1e3);const colorInput=document.getElementById("colorInput");function getRandomColor(){const letters="0123456789ABCDEF";let color="#";for(let i=0;i<6;i++)color+=letters[Math.floor(16*Math.random())];return color}colorInput.addEventListener("input",event=>{const newBgColor=event.target.value;root.style.setProperty("--bg",newBgColor),localStorage.setItem("bgColor",newBgColor)}),document.addEventListener("click",()=>{console.log(document.activeElement);const isInputElement="INPUT"===document.activeElement.tagName,isButtonElement="BUTTON"===document.activeElement.tagName,isTextareaElement="TEXTAREA"===document.activeElement.tagName;if(!isInputElement&&!isButtonElement&&!isTextareaElement){const newColor=getRandomColor();root.style.setProperty("--bg",newColor),colorInput.value=newColor,localStorage.setItem("bgColor",newColor)}});const resetColorBtn=document.getElementById("resetColorBtn");resetColorBtn.addEventListener("click",()=>{let ogColor="#E0B489";root.style.setProperty("--bg",ogColor),localStorage.setItem("bgColor",ogColor),colorInput.value=ogColor});const usernameInput=document.getElementById("usernameInput"),tokenInput=document.getElementById("tokenInput"),pushesBox=document.getElementById("pushesBox"),fetchMoreBtn=document.getElementById("fetchMoreBtn");let numberOfPushes=5,username="araceliponce",accessToken="";function fetchPushes(username,accessToken){let url,headers={};""!==accessToken&&(headers={Authorization:`token ${accessToken}`}),fetch(`https://api.github.com/users/${username}/events`,{headers:headers}).then(response=>response.json()).then(data=>{if(Array.isArray(data)){const pushEvents=data.filter(event=>"PushEvent"===event.type),pushes=pushEvents.map(event=>{const isPublic=event.public;return{repo:event.repo.name,message:event.payload.commits[0].message,date:event.created_at,public:isPublic}});renderPushes(pushes)}else console.error("Invalid API response format.")}).catch(error=>{console.error("Error:",error)})}function renderPushes(pushes){pushesBox.innerHTML="",pushes.slice(0,numberOfPushes).forEach(push=>{const li=document.createElement("li");li.textContent=`Repo: ${push.repo} - Message: ${push.message} - Date: ${push.date}`,pushesBox.appendChild(li)}),pushes.length>numberOfPushes?fetchMoreBtn.style.display="block":fetchMoreBtn.style.display="none"}usernameInput.addEventListener("keydown",e=>{"Enter"===e.key&&(username=usernameInput.value.trim(),accessToken="",fetchPushes(username,accessToken))}),tokenInput.addEventListener("keydown",e=>{"Enter"===e.key&&(accessToken=tokenInput.value.trim(),fetchPushes(username,accessToken))}),fetchMoreBtn.addEventListener("click",()=>{numberOfPushes+=5,fetchPushes(username,accessToken)}),fetchPushes(username,accessToken);